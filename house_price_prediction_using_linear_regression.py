# -*- coding: utf-8 -*-
"""House Price Prediction using Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P5gAN6dqe604pOOSDjq9buX7EnjIwCyy
"""

#import all required libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

#load the dataset

df=pd.read_csv("/content/House Price Prediction.csv")

df.head(10)

df.info()

df.describe()

#check for missing values
df.isnull().sum()

#replace missing values
df.fillna(0,inplace=True)

#after replacing missing values
df.isnull().sum()

x=df[['GrLivArea','BedroomAbvGr','FullBath']]
y=df['SalePrice']

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

model=LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)
y_pred

mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

#visual representation
#Scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Prices vs. Predicted Prices")

plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--', lw=2)
plt.show()